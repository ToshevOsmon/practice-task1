apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T15:05:59Z"
    generateName: hr-app-db6b5548c-
    labels:
      author: Abdumalik
      pod-template-hash: db6b5548c
      project: practice
    name: hr-app-db6b5548c-fk6jt
    namespace: a-nabixojayev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: hr-app-db6b5548c
      uid: 04e39f16-cce2-48d3-8f26-09da740aa7f1
    resourceVersion: "2672251"
    uid: d06994c3-b573-4957-a934-7e4018b6fb74
  spec:
    containers:
    - image: nginx:1.18
      imagePullPolicy: IfNotPresent
      name: hr-app
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnkzk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fnkzk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:05:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:05:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7f49f93c47e3eae125da35f91573c338ce6cee0067796886e7e68e7fcc6e8050
      image: docker.io/library/nginx:1.18
      imageID: docker.io/library/nginx@sha256:e90ac5331fe095cea01b121a3627174b2e33e06e83720e9a934c7b8ccc9c55a0
      lastState: {}
      name: hr-app
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T15:06:00Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnkzk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.81
    hostIPs:
    - ip: 157.180.26.81
    phase: Running
    podIP: 10.233.68.65
    podIPs:
    - ip: 10.233.68.65
    qosClass: BestEffort
    startTime: "2025-02-26T15:05:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:36:07Z"
    labels:
      author: Abdumalik
      project: practice
    name: nginx1
    namespace: a-nabixojayev
    resourceVersion: "2664804"
    uid: b9f13b2e-e2db-43ea-86c6-db3bdcb3af92
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9d7bl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9d7bl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6287e38c3ac2bd6a30094bdeed6344e38ef2efc7be5b205ce83633745d8db8f2
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:36:09Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9d7bl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.81
    hostIPs:
    - ip: 157.180.26.81
    phase: Running
    podIP: 10.233.68.202
    podIPs:
    - ip: 10.233.68.202
    qosClass: BestEffort
    startTime: "2025-02-26T14:36:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:37:01Z"
    labels:
      author: Abdumalik
      project: practice
    name: nginx2
    namespace: a-nabixojayev
    resourceVersion: "2665018"
    uid: 3e94efe8-4c04-4eb2-b25a-6dc13e0a69c8
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7czl5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7czl5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:37:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:37:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:37:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:37:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:37:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a2aedb7cc038d20f1f1232a9d50d4a00d047f15f697acdabbf847d1fc3039105
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:37:02Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7czl5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.64.58
    podIPs:
    - ip: 10.233.64.58
    qosClass: BestEffort
    startTime: "2025-02-26T14:37:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"abduhalil","project":"practice"},"name":"nginx1","namespace":"a-yoldoshov"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-02-26T14:41:05Z"
    labels:
      author: abduhalil
      project: practice
    name: nginx1
    namespace: a-yoldoshov
    resourceVersion: "2665967"
    uid: d8ce8b3d-58f6-402f-8c16-ca74d965de1a
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wkrl4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node4
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wkrl4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://027375537ef25214ea4a58633a75b3e8aae9dd3ad9da19e97e4bcf53f13294e5
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:41:06Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wkrl4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.144
    hostIPs:
    - ip: 157.180.26.144
    phase: Running
    podIP: 10.233.66.141
    podIPs:
    - ip: 10.233.66.141
    qosClass: BestEffort
    startTime: "2025-02-26T14:41:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"abduhalil","project":"practice"},"name":"nginx2","namespace":"a-yoldoshov"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-02-26T14:41:14Z"
    labels:
      author: abduhalil
      project: practice
    name: nginx2
    namespace: a-yoldoshov
    resourceVersion: "2666010"
    uid: b93a6593-ad00-4587-a25d-3309c5ae9ac3
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkpxw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rkpxw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:41:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1f85d8f605e45fbdfbbd86ab01937755f863cd89d54c10a0c96f44c711373052
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:41:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkpxw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.64.109
    podIPs:
    - ip: 10.233.64.109
    qosClass: BestEffort
    startTime: "2025-02-26T14:41:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"author":"dilmurod","project":"practice"},"name":"nginx1","namespace":"d-djuraev"},"spec":{"containers":[{"image":"nginx","name":"nginx1","resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"},"status":{}}
    creationTimestamp: "2025-02-26T15:06:25Z"
    labels:
      author: dilmurod
      project: practice
    name: nginx1
    namespace: d-djuraev
    resourceVersion: "2672372"
    uid: 29499e2f-c4b7-4285-9c90-0dd5d23dd663
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zgf6w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zgf6w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:06:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e0b570c85580b1ff12da8c6cb898fc99d1131741a9e8f6f8ebfae3582722fd21
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T15:06:27Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zgf6w
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.64.83
    podIPs:
    - ip: 10.233.64.83
    qosClass: BestEffort
    startTime: "2025-02-26T15:06:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"author":"dilmurod","project":"practice"},"name":"nginx2","namespace":"d-djuraev"},"spec":{"containers":[{"image":"nginx","name":"nginx2","resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"},"status":{}}
    creationTimestamp: "2025-02-26T15:07:11Z"
    labels:
      author: dilmurod
      project: practice
    name: nginx2
    namespace: d-djuraev
    resourceVersion: "2672575"
    uid: 08b98d31-b66e-46e4-b3ed-b166cfa99d17
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7qjg6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node4
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7qjg6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:07:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:07:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:07:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:07:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:07:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://01ed7971933e7dfba8b648bf88976a7d6c20be6dcf6398d57bc7e759c398d4b6
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T15:07:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7qjg6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.144
    hostIPs:
    - ip: 157.180.26.144
    phase: Running
    podIP: 10.233.66.177
    podIPs:
    - ip: 10.233.66.177
    qosClass: BestEffort
    startTime: "2025-02-26T15:07:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"f-absoatov","project":"practice","run":"nginx-absoatov"},"name":"nginx1","namespace":"f-absoatov"},"spec":{"containers":[{"image":"nginx:latest","name":"nginx-absoatov","ports":[{"containerPort":80}]}],"restartPolicy":"Always"}}
    creationTimestamp: "2025-02-26T14:52:20Z"
    labels:
      author: f-absoatov
      project: practice
      run: nginx-absoatov
    name: nginx1
    namespace: f-absoatov
    resourceVersion: "2668954"
    uid: 9fac6964-d763-40e8-960a-a40522575735
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx-absoatov
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-frxst
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node4
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-frxst
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5fd9cd3d4f9af84dfe1335f8732d5940835012616de17c57f08cfdf545594e89
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx-absoatov
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:52:22Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-frxst
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.144
    hostIPs:
    - ip: 157.180.26.144
    phase: Running
    podIP: 10.233.66.79
    podIPs:
    - ip: 10.233.66.79
    qosClass: BestEffort
    startTime: "2025-02-26T14:52:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"f-absoatov","project":"practice"},"name":"nginx2","namespace":"f-absoatov"},"spec":{"containers":[{"image":"nginx:latest","name":"nginx","ports":[{"containerPort":80}]}],"restartPolicy":"Always"}}
    creationTimestamp: "2025-02-26T14:52:21Z"
    labels:
      author: f-absoatov
      project: practice
    name: nginx2
    namespace: f-absoatov
    resourceVersion: "2668953"
    uid: bfa4b182-60da-427e-a490-3fa62334b4ab
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d9pzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-d9pzv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:52:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5dd4bb32f27d2889810a184a0ee3c75c4e22e986436620861b29b4424ef7e29c
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:52:22Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d9pzv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.69.244
    podIPs:
    - ip: 10.233.69.244
    qosClass: BestEffort
    startTime: "2025-02-26T14:52:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"author":"farrukh","project":"practice","run":"nginx1"},"name":"nginx1","namespace":"f-sadatov"},"spec":{"containers":[{"image":"nginx:latest","name":"nginx1","ports":[{"containerPort":80}],"resources":{}}]}}
    creationTimestamp: "2025-02-26T14:36:26Z"
    labels:
      author: farrukh
      project: practice
      run: nginx1
    name: nginx1
    namespace: f-sadatov
    resourceVersion: "2664889"
    uid: 779d75df-9adc-43e7-9b2b-299faf5ce43b
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx1
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xk88k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xk88k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:36:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://29d621716842fda2550e1f8f0831419794cbf41a114f40066f2fbd9f9c29ddea
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:36:27Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xk88k
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.69.191
    podIPs:
    - ip: 10.233.69.191
    qosClass: BestEffort
    startTime: "2025-02-26T14:36:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"author":"farrukh","project":"practice","run":"nginx2"},"name":"nginx2","namespace":"f-sadatov"},"spec":{"containers":[{"image":"nginx:latest","name":"nginx2","ports":[{"containerPort":80}],"resources":{}}]}}
    creationTimestamp: "2025-02-26T14:38:45Z"
    labels:
      author: farrukh
      project: practice
      run: nginx2
    name: nginx2
    namespace: f-sadatov
    resourceVersion: "2665440"
    uid: afa7334e-32ef-4ce5-abf8-029bb5fc6d6f
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx2
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qxwwc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qxwwc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a98566afca199df90df4e8b493ad9c57abc7e9baaf1cab60db675e7bf16c172e
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:38:47Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qxwwc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.69.22
    podIPs:
    - ip: 10.233.69.22
    qosClass: BestEffort
    startTime: "2025-02-26T14:38:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:38:28Z"
    labels:
      author: i-abdullayev
      project: practice
    name: nginx1
    namespace: i-abdullayev
    resourceVersion: "2665363"
    uid: 0c31172c-9d3d-409e-a1c3-b3cc9633d7c6
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fmxxw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fmxxw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:30Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dcfa626aa68c79c2496048d327a6de44a10ffe1cd951fa2b476e442cf2d58034
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:38:29Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fmxxw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.81
    hostIPs:
    - ip: 157.180.26.81
    phase: Running
    podIP: 10.233.68.159
    podIPs:
    - ip: 10.233.68.159
    qosClass: BestEffort
    startTime: "2025-02-26T14:38:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:38:52Z"
    labels:
      author: i-abdullayev
      project: practice
    name: nginx2
    namespace: i-abdullayev
    resourceVersion: "2665479"
    uid: 64318948-b548-4706-96ce-0055d1c3123c
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bcvtz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bcvtz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:38:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bfb23f74a774a3821cdfa747df86167d7a7df17ba64d99cf26b7d9e0e36638a0
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:38:53Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bcvtz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.170
    podIPs:
    - ip: 10.233.67.170
    qosClass: BestEffort
    startTime: "2025-02-26T14:38:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"jasurbek","project":"practice"},"name":"nginx1","namespace":"j-jumanazarov"},"spec":{"containers":[{"image":"nginx:1.14.2","name":"nginx1","ports":[{"containerPort":80}]}]}}
    creationTimestamp: "2025-02-26T14:50:49Z"
    labels:
      author: jasurbek
      project: practice
    name: nginx1
    namespace: j-jumanazarov
    resourceVersion: "2668555"
    uid: 32d95b68-f8ec-4c57-9b57-6dbcd99bd6a4
  spec:
    containers:
    - image: nginx:1.14.2
      imagePullPolicy: IfNotPresent
      name: nginx1
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvkgq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wvkgq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://097200e09bf549e2ed1fb15e3855d248809805165226f4af56a9c2f974297bfd
      image: docker.io/library/nginx:1.14.2
      imageID: docker.io/library/nginx@sha256:f7988fb6c02e0ce69257d9bd9cf37ae20a60f1df7563c3a2a6abe24160306b8d
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:50:49Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvkgq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.252
    podIPs:
    - ip: 10.233.67.252
    qosClass: BestEffort
    startTime: "2025-02-26T14:50:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"jasurbek","project":"practice"},"name":"nginx2","namespace":"j-jumanazarov"},"spec":{"containers":[{"image":"nginx:1.14.2","name":"nginx2","ports":[{"containerPort":80}]}]}}
    creationTimestamp: "2025-02-26T14:50:54Z"
    labels:
      author: jasurbek
      project: practice
    name: nginx2
    namespace: j-jumanazarov
    resourceVersion: "2668579"
    uid: 34604c2b-bbd0-4420-8cf8-6138bd4ed972
  spec:
    containers:
    - image: nginx:1.14.2
      imagePullPolicy: IfNotPresent
      name: nginx2
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4hbmf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4hbmf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:50:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ee0016fc6dd9a4da7ed034641aed118ee924a1eedb348e7bf4511c0487985fdf
      image: docker.io/library/nginx:1.14.2
      imageID: docker.io/library/nginx@sha256:f7988fb6c02e0ce69257d9bd9cf37ae20a60f1df7563c3a2a6abe24160306b8d
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:50:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4hbmf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.208
    podIPs:
    - ip: 10.233.67.208
    qosClass: BestEffort
    startTime: "2025-02-26T14:50:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"jamshid","project":"practice"},"name":"nginx1","namespace":"j-turdiev"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-02-26T15:11:23Z"
    labels:
      author: jamshid
      project: practice
    name: nginx1
    namespace: j-turdiev
    resourceVersion: "2673893"
    uid: e4c09c24-748e-4936-943e-3bd8636dbd3e
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xgrkd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xgrkd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://db6b755a0c2fe31f77dca7bbff7d12125202d54c846fa0596c753351ca4de443
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T15:11:25Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xgrkd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.81
    hostIPs:
    - ip: 157.180.26.81
    phase: Running
    podIP: 10.233.68.167
    podIPs:
    - ip: 10.233.68.167
    qosClass: BestEffort
    startTime: "2025-02-26T15:11:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"jamshid","project":"practice"},"name":"nginx2","namespace":"j-turdiev"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-02-26T15:11:23Z"
    labels:
      author: jamshid
      project: practice
    name: nginx2
    namespace: j-turdiev
    resourceVersion: "2673892"
    uid: 369f6704-7c35-476f-b2e1-f361dcbac0c3
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4xml7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4xml7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T15:11:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3f9a5ad16dcc970bd29b84c078704a2a57f01f94b67cc82d739107a67c474dd7
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T15:11:25Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4xml7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.171
    podIPs:
    - ip: 10.233.67.171
    qosClass: BestEffort
    startTime: "2025-02-26T15:11:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:29:53Z"
    labels:
      author: muzaffar
      project: practice
      run: nginx1
    name: nginx1
    namespace: m-shukurjonov
    resourceVersion: "2663366"
    uid: 7ddc97e3-db67-4353-a315-0462c7e76996
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx1
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxr28
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zxr28
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e4065e3ed07b7170e208af65ec63f71619cb313e7213f70cdbd412e7d2c1833b
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:29:55Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zxr28
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.64.68
    podIPs:
    - ip: 10.233.64.68
    qosClass: BestEffort
    startTime: "2025-02-26T14:29:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:34:05Z"
    labels:
      author: muzaffar
      project: practice
      run: nginx2
    name: nginx2
    namespace: m-shukurjonov
    resourceVersion: "2664347"
    uid: 13638732-d154-4db2-ba45-1bf02db92671
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx2
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gfv9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node4
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7gfv9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:34:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:34:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:34:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:34:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:34:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e239c32c77ce6935204bf9c446802027872d966e611c028d55ab0995dabb1c1e
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:34:06Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gfv9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.144
    hostIPs:
    - ip: 157.180.26.144
    phase: Running
    podIP: 10.233.66.104
    podIPs:
    - ip: 10.233.66.104
    qosClass: BestEffort
    startTime: "2025-02-26T14:34:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:29:54Z"
    labels:
      author: ToshevOsmon
      project: practice
      run: nginx1
    name: nginx1
    namespace: o-toshev
    resourceVersion: "2663370"
    uid: 8e78e983-fbe8-47b9-9fd7-684400485235
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sgr2m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-sgr2m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c1bcc543c1506a2c46e3c478c6642f58c746489bd7880a2f4b902490ef3dd11b
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:29:55Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sgr2m
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.181
    podIPs:
    - ip: 10.233.67.181
    qosClass: BestEffort
    startTime: "2025-02-26T14:29:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:29:59Z"
    labels:
      author: ToshevOsmon
      project: practice
      run: nginx2
    name: nginx2
    namespace: o-toshev
    resourceVersion: "2663409"
    uid: a7019da7-1a5f-465a-a743-acc8b3e2731b
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4bsxp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node4
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4bsxp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:30:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:30:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:30:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:29:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cb71befae408775e5318c88899b8a0a6046209fbe38f5e761eaee14049db94d4
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:30:01Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4bsxp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.144
    hostIPs:
    - ip: 157.180.26.144
    phase: Running
    podIP: 10.233.66.99
    podIPs:
    - ip: 10.233.66.99
    qosClass: BestEffort
    startTime: "2025-02-26T14:29:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:49:04Z"
    labels:
      author: r-shokirov
      project: practice
    name: nginx1
    namespace: r-shokirov
    resourceVersion: "2668102"
    uid: bad9db75-4f80-4f16-8cfc-d10bdc4e5e63
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: pod
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wkv2z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node4
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wkv2z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:49:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:49:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:49:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:49:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:49:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b5e2e05cb3a80d86ff5afc44d9033358b3333164a185c18d1d36239cf4f4ccb6
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: pod
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:49:06Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wkv2z
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.144
    hostIPs:
    - ip: 157.180.26.144
    phase: Running
    podIP: 10.233.66.100
    podIPs:
    - ip: 10.233.66.100
    qosClass: BestEffort
    startTime: "2025-02-26T14:49:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:53:49Z"
    labels:
      author: r-shokirov
      project: practice
    name: nginx2
    namespace: r-shokirov
    resourceVersion: "2669273"
    uid: 6acdb4b7-fca5-4d9e-bd31-9af8a70c2d64
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: pod
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lwmbg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lwmbg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:53:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:53:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:53:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:53:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:53:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://622456c10255ccca57ec4706451aaa738b26dcaa3acfb518f1357eb84ee2936f
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: pod
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:53:50Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lwmbg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.69.198
    podIPs:
    - ip: 10.233.69.198
    qosClass: BestEffort
    startTime: "2025-02-26T14:53:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:40:25Z"
    labels:
      author: xurshid
      project: practice
    name: nginx1
    namespace: x-sagatov
    resourceVersion: "2665803"
    uid: cde7ca27-665a-4bc9-8cd6-f6534a696ab2
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g5tg2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node5
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-g5tg2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5c981ed5953a4a291d314e59a9abfc5ce72e9f4f28a8c3b589b670a509fa4ad8
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:40:26Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g5tg2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 157.180.26.81
    hostIPs:
    - ip: 157.180.26.81
    phase: Running
    podIP: 10.233.68.224
    podIPs:
    - ip: 10.233.68.224
    qosClass: BestEffort
    startTime: "2025-02-26T14:40:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:40:30Z"
    labels:
      author: xurshid
      project: practice
    name: nginx2
    namespace: x-sagatov
    resourceVersion: "2665836"
    uid: 27d9e400-26aa-404e-89c5-84318a7cb604
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w5w4w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w5w4w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:40:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fbf895b50e98a39b676f47e7e0a05488c9393798dc7017cbcdb476ba058617e9
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:40:32Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w5w4w
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.69.11
    podIPs:
    - ip: 10.233.69.11
    qosClass: BestEffort
    startTime: "2025-02-26T14:40:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:18:31Z"
    labels:
      project: practice
    name: nginx1
    namespace: x-umarov
    resourceVersion: "2673683"
    uid: c4cb7832-332b-4b4d-88e1-4717a268c13d
  spec:
    containers:
    - args:
      - author=Xondamir
      image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lb9pk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lb9pk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:18:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:18:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:18:31Z"
      message: 'containers with unready status: [nginx1]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:18:31Z"
      message: 'containers with unready status: [nginx1]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:18:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://70f63074cf72f52acd1118a9524e1f96db5da261dd405aa257fd65db28fde2ab
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState:
        terminated:
          containerID: containerd://70f63074cf72f52acd1118a9524e1f96db5da261dd405aa257fd65db28fde2ab
          exitCode: 127
          finishedAt: "2025-02-26T15:10:31Z"
          reason: Error
          startedAt: "2025-02-26T15:10:31Z"
      name: nginx1
      ready: false
      restartCount: 15
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=nginx1 pod=nginx1_x-umarov(c4cb7832-332b-4b4d-88e1-4717a268c13d)
          reason: CrashLoopBackOff
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lb9pk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.69.157
    podIPs:
    - ip: 10.233.69.157
    qosClass: BestEffort
    startTime: "2025-02-26T14:18:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:19:28Z"
    labels:
      project: practice
    name: nginx2
    namespace: x-umarov
    resourceVersion: "2673897"
    uid: 60a92f75-15ba-42e8-87c9-66b43123e1e0
  spec:
    containers:
    - args:
      - author=Xondamir
      image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c7kf8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-c7kf8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:19:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:19:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:35:29Z"
      message: 'containers with unready status: [nginx2]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:35:29Z"
      message: 'containers with unready status: [nginx2]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:19:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5b14d873715a4631f92912cff94d39a057f2f3a7af32acd45ab7ec094fd1c8dc
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState:
        terminated:
          containerID: containerd://5b14d873715a4631f92912cff94d39a057f2f3a7af32acd45ab7ec094fd1c8dc
          exitCode: 127
          finishedAt: "2025-02-26T15:11:14Z"
          reason: Error
          startedAt: "2025-02-26T15:11:14Z"
      name: nginx2
      ready: false
      restartCount: 15
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=nginx2 pod=nginx2_x-umarov(60a92f75-15ba-42e8-87c9-66b43123e1e0)
          reason: CrashLoopBackOff
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c7kf8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.180
    podIPs:
    - ip: 10.233.67.180
    qosClass: BestEffort
    startTime: "2025-02-26T14:19:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:58:53Z"
    labels:
      author: z-abduvohidov
      project: practice
    name: nginx1
    namespace: z-abduvohidov
    resourceVersion: "2670433"
    uid: ad37c559-2b93-4860-b8aa-535c6618c0dd
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwvsl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nwvsl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:58:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:58:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:58:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:58:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:58:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://277ab1f3fca778de9b869bd8376ebf68a9e3e3432b07dd981c5ab6c13d448088
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:58:54Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nwvsl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.64.123
    podIPs:
    - ip: 10.233.64.123
    qosClass: BestEffort
    startTime: "2025-02-26T14:58:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-26T14:59:56Z"
    labels:
      author: z-abduvohidov
      project: practice
    name: nginx2
    namespace: z-abduvohidov
    resourceVersion: "2670766"
    uid: ec0d35b2-58c2-42a2-9f80-60c682a5dfb4
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gftsj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gftsj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:59:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:59:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:59:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:59:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-26T14:59:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://616fb115b1e63292a857777a59751c58d4a9199cd5c89b1824183979bdb13db6
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:9d6b58feebd2dbd3c56ab5853333d627cc6e281011cfd6050fa4bcf2072c9496
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-02-26T14:59:57Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gftsj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.64.81
    podIPs:
    - ip: 10.233.64.81
    qosClass: BestEffort
    startTime: "2025-02-26T14:59:56Z"
kind: List
metadata:
  resourceVersion: ""
